"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[583],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(a),f=r,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||o;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7122:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var n=a(3117),r=a(102),o=(a(7294),a(3905)),i=["components"],l={sidebar_position:1},c="Overview",s={unversionedId:"reference/API/overview",id:"reference/API/overview",title:"Overview",description:"For data, Nakji offers two APIs, a REST (historical) API as well as a Realtime API. You can also learn more about what data streams are available on Nakji and details of each data stream through our System Metadata APIs.",source:"@site/docs/reference/API/overview.md",sourceDirName:"reference/API",slug:"/reference/API/overview",permalink:"/docs/reference/API/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Auth/Limits",permalink:"/docs/reference/auth"},next:{title:"System Metadata",permalink:"/docs/reference/API/system-metadata"}},p={},d=[{value:"Data encoding",id:"data-encoding",level:2},{value:"Full example",id:"full-example",level:4}],u={toc:d};function f(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"For data, Nakji offers two APIs, a ",(0,o.kt)("a",{parentName:"p",href:"./historical"},"REST (historical) API")," as well as a ",(0,o.kt)("a",{parentName:"p",href:"./real-time"},"Realtime API"),". You can also learn more about what data streams are available on Nakji and details of each data stream through our ",(0,o.kt)("a",{parentName:"p",href:"./system-metadata"},"System Metadata")," APIs. "),(0,o.kt)("p",null,"This document is a work in progress. If you have any questions, comments, or concerns, please feel free to reach out to us via Telegram, Discord, or email."),(0,o.kt)("h2",{id:"data-encoding"},"Data encoding"),(0,o.kt)("p",null,"Some data is stored as ",(0,o.kt)("inlineCode",{parentName:"p"},"bytes"),", and are delivered via the historical and real-time api encoded as base64. API clients should decode from base64 to get their desired format."),(0,o.kt)("p",null,"For example, to decode from base64 into int in javascript:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"parseInt(Buffer.from(rawData, \"base64\").toString('hex'), 16)\n")),(0,o.kt)("p",null,"For fields that are typically displayed in hex (eg. Addresses and Transaction hashes), you can convert from base64 encoding to hex. Example in javascript below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const buffer = Buffer.from(rawData, 'base64');\nbuffer.toString('hex');\n")),(0,o.kt)("h4",{id:"full-example"},"Full example"),(0,o.kt)("p",null,"The following is a single data point from ",(0,o.kt)("a",{parentName:"p",href:"https://api.nakji.network/v1/data/nakji.common.0_0_0.liquiditypool_change"},"https://api.nakji.network/v1/data/nakji.common.0_0_0.liquiditypool_change"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const data = {\n  "ts": {\n    "seconds": 1652507010\n  },\n  "block": 14771872,\n  "idx": 967,\n  "tx": "tnS9qc9guCFqLLB/QO0Aoo7BaVeuVN4W01EJpMSevjM=",\n  "sender": "3vHA3tm+x/GhZwgZgzJA8CeyXv8=",\n  "amount0in": "5OfhaK80AA==",\n  "amount1out": "AShqmM6480Tr",\n  "to": "dN5dT8v2PgApb9ldMyNrl5QBZjE="\n}\n')),(0,o.kt)("p",null,"You'll notice that ",(0,o.kt)("inlineCode",{parentName:"p"},"tx"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"sender"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"to"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"amount0in"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"amount0out")," are all encoded in base64. "),(0,o.kt)("p",null,"To decode ",(0,o.kt)("inlineCode",{parentName:"p"},"tx"),", which is expected as a hex value:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const buffer = Buffer.from(data.tx, 'base64');\nconsole.log(buffer.toString('hex'));\n// tx: 0xb674bda9cf60b8216a2cb07f40ed00a28ec16957ae54de16d35109a4c49ebe33\n// https://etherscan.io/tx/0xb674bda9cf60b8216a2cb07f40ed00a28ec16957ae54de16d35109a4c49ebe33\n")),(0,o.kt)("p",null,"To decode ",(0,o.kt)("inlineCode",{parentName:"p"},"sender"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"to"),", which are expected as a hex values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(Buffer.from(data.sender, 'base64').toString('hex'));\n// sender: 0xdef1c0ded9bec7f1a1670819833240f027b25eff\nconsole.log(Buffer.from(data.to, 'base64').toString('hex'));\n// to: 0x74de5d4fcbf63e00296fd95d33236b9794016631\n")),(0,o.kt)("p",null,"To decode ",(0,o.kt)("inlineCode",{parentName:"p"},"amount0in")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"amount1out"),", which are expected to be number values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"parseInt(Buffer.from(data.amount0in, \"base64\").toString('hex'), 16)\n// amount0in: 64431250000000000\nparseInt(Buffer.from(data.amount1out, \"base64\").toString('hex'), 16)\n// amount1out: 21359052196391634155\n")))}f.isMDXComponent=!0}}]);