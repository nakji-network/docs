(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[575],{5481:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var n=a(2122),i=a(9756),s=(a(7294),a(3905)),r=["components"],o={sidebar_position:4},l="APIs",p={unversionedId:"reference/apis",id:"reference/apis",isDocsHomePage:!1,title:"APIs",description:"Overview",source:"@site/docs/reference/apis.md",sourceDirName:"reference",slug:"/reference/apis",permalink:"/docs/reference/apis",version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Auth",permalink:"/docs/reference/auth"}},d=[{value:"Overview",id:"overview",children:[]},{value:"REST API",id:"rest-api",children:[{value:"Endpoints",id:"endpoints",children:[]},{value:"<code>/tv/reference/symbols</code>",id:"tvreferencesymbols",children:[]},{value:"<code>/tv/reference/symbols/&lt;streamName&gt;</code>",id:"tvreferencesymbolsstreamname",children:[]},{value:"<code>/data</code>",id:"data",children:[]},{value:"<code>/lpe/ohlcvvvv</code>",id:"lpeohlcvvvv",children:[]}]},{value:"Realtime API",id:"realtime-api",children:[{value:"Examples",id:"examples",children:[]}]},{value:"Notes",id:"notes",children:[]}],c={toc:d};function m(e){var t=e.components,a=(0,i.Z)(e,r);return(0,s.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"apis"},"APIs"),(0,s.kt)("h2",{id:"overview"},"Overview"),(0,s.kt)("p",null,"Nakji offers two APIs, a ",(0,s.kt)("a",{parentName:"p",href:"#realtime-api"},"REST (historical) API")," as well as a ",(0,s.kt)("a",{parentName:"p",href:"#realtime-api"},"Realtime API"),"."),(0,s.kt)("p",null,"This is a work in progress. If you have any questions and concerns, please feel free to reach out to us via TG, Discord, or email."),(0,s.kt)("h2",{id:"rest-api"},"REST API"),(0,s.kt)("p",null,"The REST API is for getting metadata and historical data. All REST API endpoints require ",(0,s.kt)("a",{parentName:"p",href:"auth"},"authentication")," during the private beta."),(0,s.kt)("p",null,"The endpoints starting with ",(0,s.kt)("inlineCode",{parentName:"p"},"/tv")," are designed to be compatible with the Tradingview charting library."),(0,s.kt)("p",null,"Base URL: ",(0,s.kt)("inlineCode",{parentName:"p"},"https://api.nakji.network/v1")),(0,s.kt)("h3",{id:"endpoints"},"Endpoints"),(0,s.kt)("h3",{id:"tvreferencesymbols"},(0,s.kt)("inlineCode",{parentName:"h3"},"/tv/reference/symbols")),(0,s.kt)("p",null,"List all available streams. Note: this response may take some time to finish loading"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Request vars:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"search"),": search for contract address, token name, etc.")),(0,s.kt)("h4",{id:"example"},"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'curl -i -X GET \\\n  -H \'Origin: https://yourdomain\' \\\n  -H \'Authorization:Bearer <apikey>\' \\\n  "https://api.nakji.network/v1/tv/reference/symbols"\n\n# Response format is `ldjson`, newline delimited json\n{"symbol":"eth","full_name":"eth:eth","description":"eth.eth.averagedifficulty.1m","exchange":"eth","ticker":"eth.eth.averagedifficulty.1m","type":"indicator"}\n{"symbol":"eth","full_name":"eth:eth","description":"eth.eth.averagegasused.1m","exchange":"eth","ticker":"eth.eth.averagegasused.1m","type":"indicator"}\n{"symbol":"eth","full_name":"eth:eth","description":"eth.eth.averagegasprice.1m","exchange":"eth","ticker":"eth.eth.averagegasprice.1m","type":"indicator"}\n{"symbol":"SLC-USDT","full_name":"uniswapv2:SLC-USDT","description":"uniswapv2.SLC-USDT.liquiditypool-1m0s (0x00004EE988665Cdda9A1080d5792cecD16Dc1220)","exchange":"uniswapv2","ticker":"uniswapv2.0x00004EE988665Cdda9A1080d5792cecD16Dc1220.liquiditypool-1m0s","type":"aggregate"}\n{"symbol":"SLC-USDT","full_name":"uniswapv2:SLC-USDT","description":"uniswapv2.SLC-USDT.trade-1m0s (0x00004EE988665Cdda9A1080d5792cecD16Dc1220)","exchange":"uniswapv2","ticker":"uniswapv2.0x00004EE988665Cdda9A1080d5792cecD16Dc1220.trade-1m0s","type":"aggregate"}\n{"symbol":"OWL-WETH","full_name":"uniswapv2:OWL-WETH","description":"uniswapv2.OWL-WETH.liquiditypool-1m0s (0x0005eE2Ef3F313aE168451ef8174b4fCC508819F)","exchange":"uniswapv2","ticker":"uniswapv2.0x0005eE2Ef3F313aE168451ef8174b4fCC508819F.liquiditypool-1m0s","type":"aggregate"}\n{"symbol":"OWL-WETH","full_name":"uniswapv2:OWL-WETH","description":"uniswapv2.OWL-WETH.trade-1m0s (0x0005eE2Ef3F313aE168451ef8174b4fCC508819F)","exchange":"uniswapv2","ticker":"uniswapv2.0x0005eE2Ef3F313aE168451ef8174b4fCC508819F.trade-1m0s","type":"aggregate"}\n\n\ncurl -i -X GET \\\n  -H \'Origin: https://yourdomain\' \\\n  -H \'Authorization:Bearer <apikey>\' \\\nhttps://api.nakji.network/v1/tv/reference/symbols\\?search\\=0x58f876857a02d6762e0101bb5c46a8c1ed44dc16\n\n{"symbol":"Cake-LP-BUSD","full_name":"pancakeswapv2:Cake-LP-BUSD","description":"pancakeswapv2.Cake-LP-BUSD.trade-1m0s (0x1016CFdA658D6Df132e15D2DFdd90F195c22886f)","exchange":"pancakeswapv2","ticker":"pancakeswapv2.0x1016CFdA658D6Df132e15D2DFdd90F195c22886f.trade-1m0s","type":"aggregate"}\n{"symbol":"Cake-LP-BUSD","full_name":"pancakeswapv2:Cake-LP-BUSD","description":"pancakeswapv2.Cake-LP-BUSD.liquiditypool-1m0s (0x1016CFdA658D6Df132e15D2DFdd90F195c22886f)","exchange":"pancakeswapv2","ticker":"pancakeswapv2.0x1016CFdA658D6Df132e15D2DFdd90F195c22886f.liquiditypool-1m0s","type":"aggregate"}\n{"symbol":"WBNB-BUSD","full_name":"pancakeswapv2:WBNB-BUSD","description":"pancakeswapv2.WBNB-BUSD.liquiditypool-1m0s (0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16)","exchange":"pancakeswapv2","ticker":"pancakeswapv2.0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16.liquiditypool-1m0s","type":"aggregate"}\n{"symbol":"WBNB-BUSD","full_name":"pancakeswapv2:WBNB-BUSD","description":"pancakeswapv2.WBNB-BUSD.trade-1m0s (0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16)","exchange":"pancakeswapv2","ticker":"pancakeswapv2.0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16.trade-1m0s","type":"aggregate"}\n')),(0,s.kt)("h3",{id:"tvreferencesymbolsstreamname"},(0,s.kt)("inlineCode",{parentName:"h3"},"/tv/reference/symbols/<streamName>")),(0,s.kt)("p",null,"Get stream info."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Request vars"),": none"),(0,s.kt)("h4",{id:"example-1"},"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'curl -i -X GET \\\n  -H \'Origin: https://yourdomain\' \\\n  -H \'Authorization:Bearer <apikey>\' \n  https://api.nakji.network/v1/tv/reference/symbols/uniswapv2.0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f.trade-1m0s\n\n{\n "s":"ok",\n "name":"AAVE-WETH",\n "timezone":"Etc/UTC",\n "minmov":1,\n "pricescale":100000000,\n "has_intraday":true,\n "has_daily":true,\n "has_weekly_and_monthly":true,\n "has_no_volume":false,\n "ticker":"uniswapv2.0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f.trade-1m0s",\n "description":"AAVE-WETH (0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f)",\n "type":"aggregate",\n "data_status":"streaming",\n "supported_resolutions":["1S","1","3","5","15","30","45","60","120","180","240","1D","1W","1M","12M"],\n "intraday_multipliers":["1","5","15","30","60","D","W"],\n "session":"24x7",\n "exchange":"uniswapv2",\n "has_seconds":false,\n "seconds_multipliers":null,\n "has_empty_bars":true\n }\n')),(0,s.kt)("h3",{id:"data"},(0,s.kt)("inlineCode",{parentName:"h3"},"/data")),(0,s.kt)("p",null,"Get historical data. The data format this endpoint returns is the same as it is stored."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Request vars:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"symbol: stream name"),(0,s.kt)("li",{parentName:"ul"},"from=1612123908000 (in ms)"),(0,s.kt)("li",{parentName:"ul"},"to=1613448768000 (in ms)"),(0,s.kt)("li",{parentName:"ul"},'resolution:\n"1S":  "1 second",\n"5S":  "5 seconds",\n"10S": "10 seconds",\n"15S": "15 seconds",\n"30S": "30 seconds",\n"1":   "1 minute",\n"3":   "3 minute",\n"5":   "5 minutes",\n"15":  "15 minutes",\n"30":  "30 minutes",\n"60":  "1 hour",\n"1H":  "1 hour",\n"2H":  "2 hour",\n"4H":  "4 hour",\n"D":   "1 day",\n"W":   "1 week",')),(0,s.kt)("h4",{id:"example-2"},"Example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"curl -i -X GET \\\n  -H 'Origin: https://youtdomain' \\\n  -H 'Authorization:Bearer <apikey>' \\\n  \"https://api.nakji.network/v1/data?symbol=pancakeswapv2.0x1016CFdA658D6Df132e15D2DFdd90F195c22886f.liquiditypoolevent&from=1630666200000&to=1640666200000&resolution=1\"\n")),(0,s.kt)("h3",{id:"lpeohlcvvvv"},(0,s.kt)("inlineCode",{parentName:"h3"},"/lpe/ohlcvvvv")),(0,s.kt)("p",null,"Get candlestick data for any AMM dex that is supported. Only streams that end in ",(0,s.kt)("inlineCode",{parentName:"p"},".liquiditypoolevent-1m0s")," or ",(0,s.kt)("inlineCode",{parentName:"p"},".trade-1m0s")," can use this endpoint. Timeframes(",(0,s.kt)("inlineCode",{parentName:"p"},"resolution"),"s) larger than 1m are aggregated using the ",(0,s.kt)("inlineCode",{parentName:"p"},"*-1m0s")," data."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"curl -i -X GET \\\n  -H 'Origin: https://youtdomain' \\\n  -H 'Authorization:Bearer <apikey>' \\\n\"https://api.nakji.network/v1/lpe/ohlcvvvv?apikey=&symbol=uniswapv2.0xCc3d1EceF1F9fD25599dbeA2755019DC09db3c54.liquiditypoolevent-1m0s&from=1615885305000&to=1616091703000&resolution=1\"\n")),(0,s.kt)("h2",{id:"realtime-api"},"Realtime API"),(0,s.kt)("p",null,"Base URL: ",(0,s.kt)("inlineCode",{parentName:"p"},"https://stream.nakji.network/")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"/ws"),": Websockets endpoint."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"/sse"),": ",(0,s.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events"},"Server sent events")," endpoint.")),(0,s.kt)("p",null,"Note: Both endpoints only support unidirectional data transmission at this time."),(0,s.kt)("h3",{id:"examples"},"Examples"),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"You can use ",(0,s.kt)("a",{parentName:"em",href:"https://github.com/websockets/wscat"},"wscat")," to test the websockets endpoint from your terminal. You can use ",(0,s.kt)("inlineCode",{parentName:"em"},"curl")," to query the SSE endpoint.")),(0,s.kt)("h4",{id:"single-stream"},"single stream"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'wscat -c "wss://stream.nakji.network/ws?streams=sushiswap.<pairid>.trade-1m0s"\ncurl https://stream.nakji.network/sse?streams=sushiswap.<pairid>.trade-1m0s\n')),(0,s.kt)("h4",{id:"wildcard-streams"},"wildcard streams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'# This will subscribe to real time LP updates.\n# For example, for all uniswap pairs you can subscribe to `uniswapv2.*.liquiditypool`\nwscat -c "wss://stream.nakji.network/ws?streams=sushiswap.*.trade-1m0s"\ncurl https://stream.nakji.network/sse?streams=sushiswap.*.trade-1m0s\n')),(0,s.kt)("h4",{id:"multiple-streams"},"multiple streams"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'wscat -c "wss://stream.nakji.network/ws?streams=x&streams=y&streams=z"\ncurl https://stream.nakji.network/sse?streams=x&streams=y&streams=z\n')),(0,s.kt)("h2",{id:"notes"},"Notes"),(0,s.kt)("p",null,"Stream names are case sensitive. Pair IDs are case sensitive to their checksummed values."))}m.isMDXComponent=!0}}]);