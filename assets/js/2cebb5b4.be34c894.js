(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[98],{7809:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),s=["components"],o={sidebar_position:3},l="Auth",c={unversionedId:"reference/auth",id:"reference/auth",isDocsHomePage:!1,title:"Auth",description:"All requests to the REST API need to include the following headers for authentication:",source:"@site/docs/reference/auth.md",sourceDirName:"reference",slug:"/reference/auth",permalink:"/docs/reference/auth",editUrl:"https://github.com/blep-ai/blep/edit/master/docs/docs/reference/auth.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Integrate Your Smart Contract",permalink:"/docs/getting-started/integrate-your-smart-contract"},next:{title:"APIs",permalink:"/docs/reference/apis"}},d=[{value:"Examples",id:"examples",children:[]},{value:"Next Steps",id:"next-steps",children:[]}],u={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"auth"},"Auth"),(0,i.kt)("p",null,"All requests to the REST API need to include the following headers for authentication:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Authorization:Bearer <apikey>")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Origin: <your_registered_url>")," ")),(0,i.kt)("p",null,"When making the request from within a web browser, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Origin")," header is set\nautomatically and cannot be overridden. When making the request from a backend\nservice, the ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin"},(0,i.kt)("inlineCode",{parentName:"a"},"Origin")," header"),"\nneeds to be set to the value that corresponds with the api-key."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"# terminal\ncurl -i -X GET \\\n  -H 'Authorization:Bearer <apikey>' \\\n  -H 'Origin: <http://localhost:3000>' \\\n  https://api.nakji.network/v1/tv/reference/symbols/uniswapv2.0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f.trade-1m0s\n\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// javascript\nconst url = "https://api.nakji.network/v1/tv/reference/symbols/uniswapv2.0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f.trade-1m0s"\nconst res = await fetch(url, {\n  headers: {\n    "Authorization": `Bearer ${config.apiToken}`,\n    // Origin header is automatically set and cannot be overridden on client \n    // side, however this is necessary when calling from Nodejs on serverside\n    "Origin": config.Origin,\n  }\n}).then(res => res.json())\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# python\n\nimport requests\nfrom requests.structures import CaseInsensitiveDict\n\nurl = "https://api.nakji.network/v1/tv/reference/symbols/uniswapv2.0xDFC14d2Af169B0D36C4EFF567Ada9b2E0CAE044f.trade-1m0s"\n\nheaders = CaseInsensitiveDict()\nheaders["Accept"] = "application/json"\nheaders["Authorization"] = "Bearer {token}"\nheaders["Origin"] = "{origin}"\n\n\nresp = requests.get(url, headers=headers)\n')),(0,i.kt)("h2",{id:"next-steps"},"Next Steps"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Call some API endpoints in the ",(0,i.kt)("a",{parentName:"li",href:"apis"},"APIs doc"))))}p.isMDXComponent=!0}}]);