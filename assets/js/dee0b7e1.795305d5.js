"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[583],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(a),f=r,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7122:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var n=a(3117),r=a(102),o=(a(7294),a(3905)),i=["components"],s={sidebar_position:1},l="Overview",c={unversionedId:"reference/API/overview",id:"reference/API/overview",title:"Overview",description:"For data, Nakji offers two APIs, a REST (historical) API as well as a Realtime API. You can also learn more about what data streams are available on Nakji and details of each data stream through our System Metadata APIs.",source:"@site/docs/reference/API/overview.md",sourceDirName:"reference/API",slug:"/reference/API/overview",permalink:"/docs/reference/API/overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Auth/Limits",permalink:"/docs/reference/auth"},next:{title:"System Metadata",permalink:"/docs/reference/API/system-metadata"}},p={},u=[{value:"Data encoding",id:"data-encoding",level:2},{value:"Full example",id:"full-example",level:4}],d={toc:u};function f(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("p",null,"For data, Nakji offers two APIs, a ",(0,o.kt)("a",{parentName:"p",href:"./historical"},"REST (historical) API")," as well as a ",(0,o.kt)("a",{parentName:"p",href:"./real-time"},"Realtime API"),". You can also learn more about what data streams are available on Nakji and details of each data stream through our ",(0,o.kt)("a",{parentName:"p",href:"./system-metadata"},"System Metadata")," APIs. "),(0,o.kt)("p",null,"This document is a work in progress. If you have any questions, comments, or concerns, please feel free to reach out to us via Telegram, Discord, or email."),(0,o.kt)("h2",{id:"data-encoding"},"Data encoding"),(0,o.kt)("p",null,"Some data is stored as ",(0,o.kt)("inlineCode",{parentName:"p"},"bytes"),", and are delivered via the historical and real-time api encoded as base64. API clients should decode from base64 to get their desired format."),(0,o.kt)("p",null,"For example, to decode from base64 into int in javascript:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"parseInt(Buffer.from(rawData, \"base64\").toString('hex'), 16)\n")),(0,o.kt)("p",null,"For fields that are typically displayed in hex (eg. Addresses and Transaction hashes), you can convert from base64 encoding to hex. Example in javascript below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const buffer = Buffer.from(rawData, 'base64');\nbuffer.toString('hex');\n")),(0,o.kt)("h4",{id:"full-example"},"Full example"),(0,o.kt)("p",null,"The following is a single data point from ",(0,o.kt)("a",{parentName:"p",href:"https://api.nakji.network/v1/data/nakji.uniswapv2.0_0_0.liquiditypool_Change"},"https://api.nakji.network/v1/data/nakji.uniswapv2.0_0_0.liquiditypool_Change"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const data = {\n  "amount0in": {\n    "Int": 0,\n    "Exp": 0,\n    "Status": 2,\n    "NaN": false\n  },\n  "amount0out": {\n    "Int": 1,\n    "Exp": 20,\n    "Status": 2,\n    "NaN": false\n  },\n  "amount1in": {\n    "Int": 59014983087549366,\n    "Exp": 0,\n    "Status": 2,\n    "NaN": false\n  },\n  "amount1out": {\n    "Int": 0,\n    "Exp": 0,\n    "Status": 2,\n    "NaN": false\n  },\n  "blockNumber": 16944361,\n  "index": 118,\n  "ns": "",\n  "s": "0xEFb47fcFCaD4F96c83D4ca676842fB03Ef20a477",\n  "sender": "A/dyQYCqa5OYlLXKQxR4Ows2syk=",\n  "to": "LPUGJXDkea5Gb/FSVGFyDK94lMU=",\n  "ts": {\n    "seconds": 1680231491\n  },\n  "txHash": "gJe3h049QR8wHJ0KNz1Zodzkjt5WFflYkYggo1Vb5UI="\n}\n')),(0,o.kt)("p",null,"You'll notice that ",(0,o.kt)("inlineCode",{parentName:"p"},"txHash"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"sender"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"to")," are all encoded in base64. "),(0,o.kt)("p",null,"To decode ",(0,o.kt)("inlineCode",{parentName:"p"},"txHash"),", which is expected as a hex value:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const buffer = Buffer.from(data.txHash, 'base64');\nconsole.log(buffer.toString('hex'));\n// txHash: 0x8097b7874e3d411f301c9d0a373d59a1dce48ede5615f958918820a3555be542\n// https://etherscan.io/tx/0x8097b7874e3d411f301c9d0a373d59a1dce48ede5615f958918820a3555be542\n")),(0,o.kt)("p",null,"To decode ",(0,o.kt)("inlineCode",{parentName:"p"},"sender"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"to"),", which are expected as a hex values:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(Buffer.from(data.sender, 'base64').toString('hex'));\n// sender: 0x03f7724180aa6b939894b5ca4314783b0b36b329\nconsole.log(Buffer.from(data.to, 'base64').toString('hex'));\n// to: 0x2cf5062570e479ae466ff1525461720caf7894c5\n")))}f.isMDXComponent=!0}}]);